<?php
use CRM_Elections_ExtensionUtil as E;

return [
  'name' => 'Election',
  'table' => 'civicrm_election',
  'class' => 'CRM_Elections_DAO_Election',
  'getInfo' => fn() => [
    'title' => E::ts('Election'),
    'title_plural' => E::ts('Elections'),
    'description' => E::ts('FIXME'),
    'log' => TRUE,
    'add' => '5.3',
  ],
  'getFields' => fn() => [
    'id' => [
      'title' => E::ts('ID'),
      'sql_type' => 'int unsigned',
      'input_type' => 'Number',
      'required' => TRUE,
      'description' => E::ts('Unique Election ID'),
      'add' => '5.3',
      'primary_key' => TRUE,
      'auto_increment' => TRUE,
    ],
    'name' => [
      'title' => E::ts('Name'),
      'sql_type' => 'varchar(255)',
      'input_type' => 'Text',
      'description' => E::ts('Name of the election.'),
      'add' => '5.3',
      'usage' => [
        'import',
        'export',
        'duplicate_matching',
      ],
    ],
    'description' => [
      'title' => E::ts('Description'),
      'sql_type' => 'text',
      'input_type' => 'Text',
      'add' => '5.3',
      'usage' => [
        'import',
        'export',
        'duplicate_matching',
      ],
    ],
    'visibility_start_date' => [
      'title' => E::ts('Visibility Start Date'),
      'sql_type' => 'datetime',
      'input_type' => 'Select Date',
      'description' => E::ts('Election visibility start date'),
      'add' => '5.3',
      'usage' => [
        'import',
        'export',
        'duplicate_matching',
      ],
      'input_attrs' => [
        'format_type' => 'birth',
      ],
    ],
    'visibility_end_date' => [
      'title' => E::ts('Visibility End Date'),
      'sql_type' => 'datetime',
      'input_type' => 'Select Date',
      'description' => E::ts('Election visibility end date'),
      'add' => '5.3',
      'usage' => [
        'import',
        'export',
        'duplicate_matching',
      ],
      'input_attrs' => [
        'format_type' => 'birth',
      ],
    ],
    'nomination_start_date' => [
      'title' => E::ts('Nomination Start Date'),
      'sql_type' => 'datetime',
      'input_type' => 'Select Date',
      'description' => E::ts('Election nomination start date'),
      'add' => '5.3',
      'usage' => [
        'import',
        'export',
        'duplicate_matching',
      ],
      'input_attrs' => [
        'format_type' => 'birth',
      ],
    ],
    'nomination_end_date' => [
      'title' => E::ts('Nomination End Date'),
      'sql_type' => 'datetime',
      'input_type' => 'Select Date',
      'description' => E::ts('Election nomination end date'),
      'add' => '5.3',
      'usage' => [
        'import',
        'export',
        'duplicate_matching',
      ],
      'input_attrs' => [
        'format_type' => 'birth',
      ],
    ],
    'advertise_candidates_date' => [
      'title' => E::ts('Advertise Candidates Date'),
      'sql_type' => 'datetime',
      'input_type' => 'Select Date',
      'description' => E::ts('Date from when candidates are available for viewing.'),
      'add' => '5.3',
      'usage' => [
        'import',
        'export',
        'duplicate_matching',
      ],
      'input_attrs' => [
        'format_type' => 'birth',
      ],
    ],
    'voting_start_date' => [
      'title' => E::ts('Voting Start Date'),
      'sql_type' => 'datetime',
      'input_type' => 'Select Date',
      'description' => E::ts('Election voting start date'),
      'add' => '5.3',
      'usage' => [
        'import',
        'export',
        'duplicate_matching',
      ],
      'input_attrs' => [
        'format_type' => 'birth',
      ],
    ],
    'voting_end_date' => [
      'title' => E::ts('Voting End Date'),
      'sql_type' => 'datetime',
      'input_type' => 'Select Date',
      'description' => E::ts('Election voting end date'),
      'add' => '5.3',
      'usage' => [
        'import',
        'export',
        'duplicate_matching',
      ],
      'input_attrs' => [
        'format_type' => 'birth',
      ],
    ],
    'result_date' => [
      'title' => E::ts('Result Date'),
      'sql_type' => 'datetime',
      'input_type' => 'Select Date',
      'description' => E::ts('Election result date, after this date election results are published.'),
      'add' => '5.3',
      'usage' => [
        'import',
        'export',
        'duplicate_matching',
      ],
      'input_attrs' => [
        'format_type' => 'birth',
      ],
    ],
    'result_status' => [
      'title' => E::ts('Result Status'),
      'sql_type' => 'int unsigned',
      'input_type' => 'Select',
      'description' => E::ts('Election result status, for admins to manage election result visibility manually.'),
      'add' => '5.3',
      'default' => 0,
      'usage' => [
        'import',
        'export',
        'duplicate_matching',
      ],
    ],
    'is_deleted' => [
      'title' => E::ts('Is Deleted'),
      'sql_type' => 'boolean',
      'input_type' => 'CheckBox',
      'description' => E::ts('Boolean field to soft delete an election.'),
      'add' => '5.3',
      'default' => FALSE,
      'usage' => ['export'],
    ],
    'is_visible' => [
      'title' => E::ts('Is Visible'),
      'sql_type' => 'boolean',
      'input_type' => 'CheckBox',
      'description' => E::ts('Boolean field to set if election is visible or not.'),
      'add' => '5.3',
      'default' => FALSE,
      'usage' => ['export'],
    ],
    'has_results_generated' => [
      'title' => E::ts('Has Results Generated'),
      'sql_type' => 'boolean',
      'input_type' => 'CheckBox',
      'description' => E::ts('Boolean field to set if results are generated.'),
      'add' => '5.3',
      'default' => FALSE,
      'usage' => ['export'],
    ],
    'anonymize_votes' => [
      'title' => E::ts('Anonymize Votes'),
      'sql_type' => 'boolean',
      'input_type' => 'CheckBox',
      'description' => E::ts('Boolean field to anonymize votes when results are generated.'),
      'add' => '5.3',
      'default' => TRUE,
      'usage' => ['export'],
    ],
    'required_nominations' => [
      'title' => E::ts('Required Nominations'),
      'sql_type' => 'int unsigned',
      'input_type' => 'Text',
      'description' => E::ts('Number of required nominations to become eligible candidate.'),
      'add' => '5.3',
      'default' => 2,
      'usage' => [
        'import',
        'export',
        'duplicate_matching',
      ],
    ],
    'allow_revote' => [
      'title' => E::ts('Allow Revote'),
      'sql_type' => 'boolean',
      'input_type' => 'CheckBox',
      'description' => E::ts('Boolean field to set if members are allowed to re-vote in election.'),
      'add' => '5.3',
      'default' => FALSE,
      'usage' => ['export'],
    ],
    'allowed_groups' => [
      'title' => E::ts('Allowed Groups'),
      'sql_type' => 'text',
      'input_type' => 'Select2',
      'description' => E::ts('List of groups, members of it are allowed to participate in election.'),
      'add' => '5.3',
      'usage' => ['export'],
    ],
    'created_at' => [
      'title' => E::ts('Created At'),
      'sql_type' => 'timestamp',
      'input_type' => NULL,
      'description' => E::ts('Date on which election created.'),
      'add' => '5.3',
      'default' => 'CURRENT_TIMESTAMP',
      'usage' => ['export'],
    ],
    'updated_at' => [
      'title' => E::ts('Updated At'),
      'sql_type' => 'timestamp',
      'input_type' => NULL,
      'description' => E::ts('Date on which election was updated.'),
      'add' => '5.3',
      'default' => 'CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP',
      'usage' => ['export'],
    ],
    'created_by' => [
      'title' => E::ts('Created By'),
      'sql_type' => 'int unsigned',
      'input_type' => 'EntityRef',
      'description' => E::ts('FK to Contact who created particular election'),
      'add' => '5.3',
      'entity_reference' => [
        'entity' => 'Contact',
        'key' => 'id',
        'on_delete' => 'CASCADE',
      ],
    ],
  ],
];
