<?php
use CRM_Elections_ExtensionUtil as E;

return [
  'name' => 'ElectionNomination',
  'table' => 'civicrm_election_nomination',
  'class' => 'CRM_Elections_DAO_ElectionNomination',
  'getInfo' => fn() => [
    'title' => E::ts('Election Nomination'),
    'title_plural' => E::ts('Election Nominations'),
    'description' => E::ts('FIXME'),
    'log' => TRUE,
    'add' => '5.3',
  ],
  'getFields' => fn() => [
    'id' => [
      'title' => E::ts('ID'),
      'sql_type' => 'int unsigned',
      'input_type' => 'Number',
      'required' => TRUE,
      'description' => E::ts('Unique ElectionNomination ID'),
      'add' => '5.3',
      'primary_key' => TRUE,
      'auto_increment' => TRUE,
    ],
    'comments' => [
      'title' => E::ts('Comments'),
      'sql_type' => 'text',
      'input_type' => 'Text',
      'add' => '5.3',
      'usage' => [
        'import',
        'export',
        'duplicate_matching',
      ],
    ],
    'rejection_comments' => [
      'title' => E::ts('Rejection Comments'),
      'sql_type' => 'text',
      'input_type' => 'Text',
      'add' => '5.3',
      'usage' => [
        'import',
        'export',
        'duplicate_matching',
      ],
    ],
    'is_eligible_candidate' => [
      'title' => E::ts('Is Eligible Candidate'),
      'sql_type' => 'boolean',
      'input_type' => 'CheckBox',
      'description' => E::ts('Boolean field to identity if nomination is a valid candidate.'),
      'add' => '5.3',
      'default' => FALSE,
      'usage' => [
        'import',
        'export',
        'duplicate_matching',
      ],
    ],
    'has_accepted_nomination' => [
      'title' => E::ts('Has Accepted Nomination'),
      'sql_type' => 'boolean',
      'input_type' => 'CheckBox',
      'description' => E::ts('Boolean field to identity if nomination has been accepted by candidate.'),
      'add' => '5.3',
      'default' => FALSE,
      'usage' => [
        'import',
        'export',
        'duplicate_matching',
      ],
    ],
    'has_rejected_nomination' => [
      'title' => E::ts('Has Rejected Nomination'),
      'sql_type' => 'boolean',
      'input_type' => 'CheckBox',
      'description' => E::ts('Boolean field to identity if nomination has been rejected by candidate.'),
      'add' => '5.3',
      'default' => FALSE,
      'usage' => [
        'import',
        'export',
        'duplicate_matching',
      ],
    ],
    'created_at' => [
      'title' => E::ts('Created At'),
      'sql_type' => 'timestamp',
      'input_type' => NULL,
      'description' => E::ts('Date on which election nomination created.'),
      'add' => '5.3',
      'default' => 'CURRENT_TIMESTAMP',
      'usage' => ['export'],
    ],
    'updated_at' => [
      'title' => E::ts('Updated At'),
      'sql_type' => 'timestamp',
      'input_type' => NULL,
      'description' => E::ts('Date on which election nomination was updated.'),
      'add' => '5.3',
      'default' => 'CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP',
      'usage' => ['export'],
    ],
    'member_nominee' => [
      'title' => E::ts('Member Nominee'),
      'sql_type' => 'int unsigned',
      'input_type' => 'EntityRef',
      'description' => E::ts('FK to Contact for which this nomination is added.'),
      'add' => '5.3',
      'entity_reference' => [
        'entity' => 'Contact',
        'key' => 'id',
        'on_delete' => 'CASCADE',
      ],
    ],
    'election_position_id' => [
      'title' => E::ts('Election Position ID'),
      'sql_type' => 'int unsigned',
      'input_type' => 'EntityRef',
      'description' => E::ts('FK to ElectionPosition for which this nomination is added.'),
      'add' => '5.3',
      'entity_reference' => [
        'entity' => 'ElectionPosition',
        'key' => 'id',
        'on_delete' => 'CASCADE',
      ],
    ],
  ],
];
