name: civix upgrade
on:
  push
env:
   COMPOSER_COMPILE: all
jobs:
  upgrade-and-push:
    runs-on: ubuntu-latest

    env:
      DB_NAME: wordpress
      DB_USER: wp_user
      DB_PASS: wp_pass
      DB_ROOT_PASS: root_pass
      DB_HOST: mariadb:3306
      WP_URL: http://localhost:8080
      WP_TITLE: Test Site
      WP_ADMIN_USER: admin
      WP_ADMIN_PASS: admin
      WP_ADMIN_EMAIL: test@example.com
      EXTENSION_NAME: au.com.agileware.elections

    services:
      mariadb:
        image: mariadb:10
        env:
          MYSQL_DATABASE: ${{ env.DB_NAME }}
          MYSQL_USER: ${{ env.DB_USER }}
          MYSQL_PASSWORD: ${{ env.DB_PASS }}
          MYSQL_ROOT_PASSWORD: ${{ env.DB_ROOT_PASS }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Detect GitHub Actions Docker network
        id: detect-network
        run: |
          NETWORK=$(docker network ls --filter "name=github_" --format "{{ .Name }}" | head -n 1)
          echo "Detected Docker network: $NETWORK"
          echo "network=$NETWORK" >> "$GITHUB_OUTPUT"

      - name: Start WordPress container
        run: |
          docker run -d --name wordpress \
            --network ${{ steps.detect-network.outputs.network }} \
            -e WORDPRESS_DB_HOST=${{ env.DB_HOST }} \
            -e WORDPRESS_DB_NAME=${{ env.DB_NAME }} \
            -e WORDPRESS_DB_USER=${{ env.DB_USER }} \
            -e WORDPRESS_DB_PASSWORD=${{ env.DB_PASS }} \
            -p 8080:80 \
            -v .:/var/www/html/wp-content/uploads/civicrm/ext/${{ env.EXTENSION_NAME }} \
            docker.io/agilewareprojects/wordpress:pipeline-latest

      - name: Wait for WordPress container startup
        run: |
          echo "Waiting for wp-config.php to exist in the container..."
          for i in {1..30}; do
            if docker exec wordpress test -f /var/www/html/wp-config.php; then
              echo "wp-config.php found!"
              break
            fi
            echo "Still waiting... ($i)"
            sleep 2
          done

          if ! docker exec wordpress test -f /var/www/html/wp-config.php; then
            echo "Timed out waiting for wp-config.php"
            exit 1
          fi

      - name: Install WordPress
        run: |
          docker exec -u www-data wordpress wp core install \
            --url=${{ env.WP_URL }} \
            --title="${{ env.WP_TITLE }}" \
            --admin_user=${{ env.WP_ADMIN_USER }} \
            --admin_password=${{ env.WP_ADMIN_PASS }} \
            --admin_email=${{ env.WP_ADMIN_EMAIL }} \
            --skip-email

      - name: Download & install cv and civix
        run: |
          curl -Ls https://download.civicrm.org/cv/cv.phar -o /tmp/cv
          curl -Ls https://download.civicrm.org/civix/civix.phar -o /tmp/civix
          docker cp /tmp/cv wordpress:/usr/local/bin/cv
          docker cp /tmp/civix wordpress:/usr/local/bin/civix
          docker exec wordpress chmod +x /usr/local/bin/cv /usr/local/bin/civix

      - name: Install civicrm
        run: |
          docker exec wordpress chown www-data wp-content/ wp-content/uploads wp-content/uploads/civicrm
          docker exec -u www-data wordpress cv core:install
          docker exec -u www-data wordpress wp plugin activate civicrm

      - name: Regenerate module
        run: |
          docker exec -w /var/www/html/wp-content/uploads/civicrm/ext/${{ env.EXTENSION_NAME }} wordpress civix upgrade

      - name: Commit and push changes
        uses: devops-infra/action-commit-push@master
        id: push-commit
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          add_timestamp: true
          commit_prefix: "CIVIBLD-287 [AUTO] "
          commit_message: "civix upgraded"
          force: false
          target_branch: civix-upgrade

      - name: Create pull request
        uses: devops-infra/action-pull-request@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          body: "**Automated pull request** - civix regenerated"
          title: "Automated pull request - civix regenerated"
          assignee: "agileware-fj"
          label: "auto"
          source_branch: ${{ steps.push-commit.outputs.branch_name  }}

      - name: Collect docker logs on failure
        if: failure()
        uses: jwalton/gh-docker-logs@v2
        with:
          dest: './logs'

      - name: Tar logs
        if: failure()
        run: tar cvzf ./logs.tgz ./logs

      - name: Upload logs to GitHub
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: logs.tgz
          path: ./logs.tgz
